# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ "dm-cache" "dm-cache-smq" "dm-cache-mq" "dm-cache-cleaner" ];
  boot.kernelModules = [ "kvm-intel" "kvm-amd" "dm-cache" "dm-cache-smq" "dm-persistent-data" "dm-bio-prison" "dm-clone" "dm-crypt" "dm-writecache" "dm-mirror" "dm-snapshot" ];
  boot.extraModulePackages = [ ];

  # for LVM: (https://github.com/NixOS/nixpkgs/issues/15516)
  services.lvm.boot.thin.enable = true;
  
  # manage temperature, prevent throttling
  # https://github.com/linux-surface/linux-surface/issues/221
  services.thermald = {
    enable = true;
    configFile = ./configFiles/thermal-conf.xml; #(https://github.com/linux-surface/linux-surface/blob/master/contrib/thermald/thermal-conf.xml)
  };

  fileSystems."/" =
    { device = "/dev/disk/by-label/NixOS";
      fsType = "ext4";
    };
  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/84A9-3C95";
      fsType = "vfat";
    };

  # MY MOUNTS
  fileSystems."/mnt/ntfsMicroSD-DataDisk" = {
    device = "/dev/disk/by-label/ntfsMicroSD-DataDisk";
    fsType = "auto";
    options = [ "uid=1000" "gid=1000" "dmask=007" "fmask=117" ];
  };

  # Changing Mounts to MicroSD with mount binds
  fileSystems."/mnt/btrfsMicroSD" =
    { device = "/dev/disk/by-label/btrfsMicroSD";
      fsType = "btrfs";
      neededForBoot = true;
    };

  fileSystems."/nix" =
    { device = "/mnt/btrfsMicroSD/nix"; 
      fsType = "none";
      options = [ "bind" ];
    };
  fileSystems."/var" =
    { device = "/mnt/btrfsMicroSD/var";
      fsType = "none";
      options = [ "bind" ];
    };
  fileSystems."/home" =
    { device = "/mnt/btrfsMicroSD/home";
      fsType = "none";
      options = [ "bind" ];
    };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
 
}
