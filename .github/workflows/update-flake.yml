name: Auto bump flake.lock
on:
  schedule:
    - cron: "0 6 * * *"
  workflow_dispatch:

concurrency:
  group: bump-flake-lock
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  bump:
    name: Bump flake.lock
    runs-on: ubuntu-latest
    steps:
      # 1) Free up disk space for Nix specifically
      - name: Nothing but Nix (reclaim disk space for /nix)
        uses: wimpysworld/nothing-but-nix@main
        with:
          hatchet-protocol: 'cleave'
      
      # 2) Checkout repository
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      # 3) Install Nix with experimental features
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes pipe-operators
      
      # 4) Show free space & git status
      - name: Show free space & git status
        run: |
          df -h
          git --version
          git status --porcelain --untracked-files=no || true
      
      # 5) Try full update first
      - name: Update all flake inputs
        id: full-update
        continue-on-error: true
        run: |
          git checkout main || git checkout -b main
          nix flake update
          git --no-pager diff flake.lock || true
      
      # 6) Check flake after full update
      - name: Check flake (full update)
        id: full-check
        if: steps.full-update.outcome == 'success'
        continue-on-error: true
        run: |
          nix flake check
      
      # 7) If full update failed, rollback and try conservative update
      - name: Rollback and update nixpkgs only
        if: steps.full-check.outcome == 'failure'
        run: |
          echo "Full update failed flake check, trying conservative update..."
          git restore flake.lock
          nix flake update nixpkgs nixpkgs-unstable
          git --no-pager diff flake.lock || true
      
      # 8) Check flake after conservative update
      - name: Check flake (conservative update)
        if: steps.full-check.outcome == 'failure'
        run: |
          nix flake check
      
      # 9) Determine commit message based on what succeeded
      - name: Set commit message
        id: commit-msg
        run: |
          if [ "${{ steps.full-check.outcome }}" == "success" ]; then
            echo "message=chore(deps): update flake.lock (all inputs)" >> $GITHUB_OUTPUT
          else
            echo "message=chore(deps): update flake.lock (nixpkgs only)" >> $GITHUB_OUTPUT
          fi
      
      # 10) Commit & push (only runs if at least one check succeeds)
      - name: Commit and push flake.lock
        if: steps.full-check.outcome == 'success' || steps.full-check.outcome == 'failure'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: ${{ steps.commit-msg.outputs.message }}
          branch: main
          commit_options: '--no-verify --signoff'
          file_pattern: flake.lock
          commit_user_name: 'github-actions[bot]'
          commit_user_email: 'github-actions[bot]@users.noreply.github.com'
          skip_dirty_check: false
          skip_fetch: true