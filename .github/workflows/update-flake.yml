name: "Update flake.lock (retry nixpkgs-only on failure)"

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 * *'

env:
  CACHIX_CACHE: yesheycachixorg
  CACHIX_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
  NIX_CONFIG: experimental-features = nix-command flakes pipe-operators

jobs:
  ############################################################
  # 1.  Build every NixOS configuration
  ############################################################
  nixos:
    strategy:
      fail-fast: false
      matrix:
        include:
          - system: x86_64-linux
            runner: ubuntu-latest
            host: desktop
          - system: aarch64-linux
            runner: ubuntu-22.04-arm
            host: skyloft
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: cachix/cachix-action@v15
        with:
          name: ${{ env.CACHIX_CACHE }}
          authToken: ${{ env.CACHIX_TOKEN }}

      - name: Full flake update
        run: nix flake update

      - name: nix flake check
        id: full
        run: nix flake check
        continue-on-error: true

      - name: Build NixOS ${{ matrix.host }} (${{ matrix.system }})
        if: steps.full.outcome == 'success'
        run: |
          nix build .#nixosConfigurations.${{ matrix.host }}.config.system.build.toplevel -L
          cachix push ${{ env.CACHIX_CACHE }} ./result

      - name: Restore & nixpkgs-only update
        if: steps.full.outcome == 'failure'
        run: |
          git restore flake.lock
          nix flake update nixpkgs nixpkgs-unstable

      - name: nix flake check (nixpkgs-only)
        id: nixpkgs
        if: steps.full.outcome == 'failure'
        run: nix flake check
        continue-on-error: true

      - name: Build NixOS ${{ matrix.host }} (nixpkgs-only)
        if: steps.nixpkgs.outcome == 'success'
        run: |
          nix build .#nixosConfigurations.${{ matrix.host }}.config.system.build.toplevel -L
          cachix push ${{ env.CACHIX_CACHE }} ./result

      - name: Upload final flake.lock
        uses: actions/upload-artifact@v4
        with:
          name: flake-lock-nixos-${{ matrix.system }}
          path: flake.lock

  ############################################################
  # 2.  Build every Home-Manager configuration
  ############################################################
  home-manager:
    strategy:
      fail-fast: false
      matrix:
        include:
          - system: x86_64-linux
            runner: ubuntu-latest
            user: you@x86
          - system: aarch64-linux
            runner: ubuntu-22.04-arm
            user: you@aarch
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: cachix/cachix-action@v15
        with:
          name: ${{ env.CACHIX_CACHE }}
          authToken: ${{ env.CACHIX_TOKEN }}

      - name: Full flake update
        run: nix flake update

      - name: nix flake check
        id: full
        run: nix flake check
        continue-on-error: true

      - name: Build HM ${{ matrix.user }} (${{ matrix.system }})
        if: steps.full.outcome == 'success'
        run: |
          nix build .#homeConfigurations.${{ matrix.user }}.activationPackage -L
          cachix push ${{ env.CACHIX_CACHE }} ./result

      - name: Restore & nixpkgs-only update
        if: steps.full.outcome == 'failure'
        run: |
          git restore flake.lock
          nix flake update nixpkgs nixpkgs-unstable

      - name: nix flake check (nixpkgs-only)
        id: nixpkgs
        if: steps.full.outcome == 'failure'
        run: nix flake check
        continue-on-error: true

      - name: Build HM ${{ matrix.user }} (nixpkgs-only)
        if: steps.nixpkgs.outcome == 'success'
        run: |
          nix build .#homeConfigurations.${{ matrix.user }}.activationPackage -L
          cachix push ${{ env.CACHIX_CACHE }} ./result

      - name: Upload final flake.lock
        uses: actions/upload-artifact@v4
        with:
          name: flake-lock-hm-${{ matrix.system }}
          path: flake.lock

  ############################################################
  # 3.  Commit the new lockfile only if **all** jobs succeeded
  ############################################################
  commit-lock:
    needs: [nixos, home-manager]
    runs-on: ubuntu-latest
    if: always() && !cancelled() && !failure()
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: flake-lock-*
          path: .
          merge-multiple: true
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(deps): update flake.lock"
          file_pattern: flake.lock
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"