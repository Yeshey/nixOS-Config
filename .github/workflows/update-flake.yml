name: "Update flake.lock & cache NixOS (sequential)"

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 * *'

env:
  CACHIX_CACHE: yesheycachixorg
  CACHIX_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
  NIX_CONFIG: experimental-features = nix-command flakes pipe-operators

jobs:
  build-and-cache:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [ubuntu-latest, ubuntu-22.04-arm]
      max-parallel: 1            # << run sequentially
    steps:
      # ----------------------------------------------------------
      # 0.  Max out disk space
      # ----------------------------------------------------------
      - name: Free disk space
        run: |
          sudo rm -rf /opt/hostedtoolcache
          df -h

      # ----------------------------------------------------------
      # 1.  Install Nix (Determinate â€“ no sudo needed)
      # ----------------------------------------------------------
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: cachix/cachix-action@v15
        with:
          name: ${{ env.CACHIX_CACHE }}
          authToken: ${{ env.CACHIX_TOKEN }}

      # ----------------------------------------------------------
      # 2.  FULL flake update
      # ----------------------------------------------------------
      - name: Full flake update
        run: |
          nix flake update
          nix-collect-garbage -d          # clean before check

      - name: Full flake check
        id: full
        run: nix flake check
        continue-on-error: true

      - name: Build NixOS config (${{ matrix.runner }})
        if: steps.full.outcome == 'success'
        run: |
          host=$([ "${{ matrix.runner }}" = "ubuntu-latest" ] && echo "desktop" || echo "skyloft")
          nix build .#nixosConfigurations."$host".config.system.build.toplevel -L
          cachix push ${{ env.CACHIX_CACHE }} ./result
          nix-collect-garbage -d          # free space when done

      # ----------------------------------------------------------
      # 3.  FALLBACK: nixpkgs-only update
      # ----------------------------------------------------------
      - name: Restore & nixpkgs-only update
        if: steps.full.outcome == 'failure'
        run: |
          git restore flake.lock
          nix flake update nixpkgs nixpkgs-unstable
          nix-collect-garbage -d

      - name: Nixpkgs-only flake check
        id: nixpkgs
        if: steps.full.outcome == 'failure'
        run: nix flake check
        continue-on-error: true

      - name: Build NixOS config (nixpkgs-only, ${{ matrix.runner }})
        if: steps.nixpkgs.outcome == 'success'
        run: |
          host=$([ "${{ matrix.runner }}" = "ubuntu-latest" ] && echo "desktop" || echo "skyloft")
          nix build .#nixosConfigurations."$host".config.system.build.toplevel -L
          cachix push ${{ env.CACHIX_CACHE }} ./result
          nix-collect-garbage -d

      # ----------------------------------------------------------
      # 4.  Save resulting lock-file
      # ----------------------------------------------------------
      - name: Upload flake.lock
        uses: actions/upload-artifact@v4
        with:
          name: flake-lock-${{ matrix.runner }}
          path: flake.lock

  ############################################################
  # 5.  Commit only if both architectures succeeded
  ############################################################
  commit-lock:
    needs: build-and-cache
    runs-on: ubuntu-latest
    if: always() && !cancelled() && !failure()
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: flake-lock-*
          path: .
          merge-multiple: true
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(deps): update flake.lock"
          file_pattern: flake.lock
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"