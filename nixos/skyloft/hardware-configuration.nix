# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [ (modulesPath + "/profiles/qemu-guest.nix") ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "virtio_pci"
    "virtio_scsi"
    "usbhid"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/104ef1dc-6b75-4b3b-ae6a-33bdeec20cbb";
    fsType = "btrfs";
    options = [ 
      "defaults"
      "x-gvfs-show" # show in gnome disks
      "compress-force=zstd:6" # compression level 6 to gain space
      # security "nosuid" "nodev" (https://serverfault.com/questions/547237/explanation-of-nodev-and-nosuid-in-fstab)
      ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/109A-7168";
    fsType = "vfat";
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.x86_64-linux
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eth0.useDHCP = lib.mkDefault true;

  #nixpkgs.buildPlatform.system = "x86_64-linux";
  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
  #nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
