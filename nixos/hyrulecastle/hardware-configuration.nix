# initialy generated with nixos-generate-config
{
  inputs,
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "ahci"
    "nvme"
    "usbhid"
    "uas"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  boot.kernelParams = [ "i915.force_probe=46a6" ]; # "i915.force_probe=46a6"

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/69e9ba80-fb1f-4c2d-981d-d44e59ff9e21";
    fsType = "btrfs";
    options = [
      "subvol=@"
      "compress=zstd"
      "noatime"
    ];
  };

  fileSystems."/boot/efi" = {
    device = "/dev/disk/by-uuid/A665-64BE";
    fsType = "vfat";
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp7s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  #     _____                            _               _____                 _  __ _         _____             __ _       
  #    / ____|                          | |             / ____|               (_)/ _(_)       / ____|           / _(_)      
  #   | |     ___  _ __ ___  _ __  _   _| |_ ___ _ __  | (___  _ __   ___  ___ _| |_ _  ___  | |     ___  _ __ | |_ _  __ _ 
  #   | |    / _ \| '_ ` _ \| '_ \| | | | __/ _ \ '__|  \___ \| '_ \ / _ \/ __| |  _| |/ __| | |    / _ \| '_ \|  _| |/ _` |
  #   | |___| (_) | | | | | | |_) | |_| | ||  __/ |     ____) | |_) |  __/ (__| | | | | (__  | |___| (_) | | | | | | | (_| |
  #    \_____\___/|_| |_| |_| .__/ \__,_|\__\___|_|    |_____/| .__/ \___|\___|_|_| |_|\___|  \_____\___/|_| |_|_| |_|\__, |
  #                         | |                               | |                                                      __/ |
  #                         |_|                               |_|                                                     |___/ 
  #   Not Generated by `nixos-generate-config`

  # swap in btrfs as followed from https://nixos.wiki/wiki/Btrfs#:~:text=btrfs%20is%20a%20modern%20copy,tolerance,%20repair%20and%20easy%20administration.
  swapDevices = [
    { device = "/var/swapfile"; size = 1*1024; 
      priority = 0; # Higher numbers indicate higher priority.
    }
    {
      device = "/dev/disk/by-label/DataDiskSwap";
      priority = 2; # Higher numbers indicate higher priority.
      # This needs to be higher, so hibernation works, systemd only checks the swap device with more priority (https://bugs.launchpad.net/ubuntu/+source/systemd/+bug/1910252)
      options = [ "nofail" ];
    }
  ];

  # MY MOUNTS
  fileSystems."/mnt/DataDisk" = {
    device = "/dev/disk/by-label/DataDisk";
    fsType = "auto";
    options = [
      "nosuid"
      "nodev"
      "nofail"
      "x-gvfs-show"
      "defaults"
      "users"
      "windows_names"
      "big_writes"
      "streams_interface=windows"
      "nls=utf8" 
      "umask=000" "dmask=027" "fmask=137" "uid=1000" "gid=1000"
    ]; # x-systemd.device-timeout=3s
  };
  fileSystems."/mnt/hdd-ntfs" = {
    device = "/dev/disk/by-label/hdd-ntfs";
    fsType = "auto";
    options = [
      "nosuid"
      "nodev"
      "nofail"
      "x-gvfs-show"
      "defaults"
      "users"
      "windows_names"
      "big_writes"
      "streams_interface=windows"
      "nls=utf8"
      "umask=000" "dmask=027" "fmask=137" "uid=1000" "gid=1000"
    ]; # "uid=1000" "gid=1000" "dmask=027" "fmask=137" # defaults,nls=utf8,umask=000,dmask=027,fmask=137,uid=1000,gid=1000,windows_names [ "uid=1000" "gid=1000" "dmask=007" "fmask=117" "nofail"]; norecover,big_writes,streams_interface=windows,inherit
  };
  fileSystems."/mnt/hdd-btrfs" = {
    device = "/dev/disk/by-label/hdd-btrfs";
    fsType = "btrfs";
    options = [
      "nosuid"
      "nodev"
      "nofail"
      "x-gvfs-show"
    ];
  };
  fileSystems."/mnt/hdd-ext4" = {
    device = "/dev/disk/by-label/hdd-ext4";
    fsType = "ext4";
    options = [
      "nosuid"
      "nodev"
      "nofail"
      "x-gvfs-show"
    ];
  };
}
